
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COLON COMMA DIV EQ EQEQ EXCLAMATION GEQ GT IDENT LBRACE LBRACKET LEQ LPAREN LT MINUS NEQ NUMBER OR PLUS QUESTION RBRACE RBRACKET RPAREN SEMICOLON TILDE SEPARE TIMES INT FLOAT ELSE FALSE LOCALS IF JOIN FOR RETURNS SEQUENTIAL BOOL TRUEprogram : joinspec sequentialspecjoinspec : JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN blockjoinspec : JOIN error RPAREN blockjoinspec : JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN errorsequentialspec : SEQUENTIAL LPAREN arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN block arglist : arglist COMMA argarglist : argarglist :arg : type IDENTidentlist : IDENTidentlist : IDENT COMMA identlistidentlist :constant : NUMBER\n    | TRUE\n    | FALSEpostfixExpression : constant\n    | IDENT\n    | LPAREN expression RPARENpostfixExpression : postfixExpression LBRACKET expression RBRACKETpostfixExpression : IDENT LPAREN expressionlist RPARENunaryExpression : unop unaryExpressionunaryExpression : postfixExpressionunop : PLUS\n    | MINUS\n    | EXCLAMATION\n    | TILDEmultiplicativeExpression : unaryExpressionmultiplicativeExpression : multiplicativeExpression multop unaryExpressionmultop : TIMES\n    | DIVadditiveExpression : unaryExpressionadditiveExpression : additiveExpression addop multiplicativeExpressionaddop : PLUS\n    | MINUSrelationalExpression : additiveExpressionrelationalExpression : relationalExpression compop additiveExpressioncompop : LT\n    | LEQ\n    | GT\n    | GEQequalityExpression : relationalExpressionequalityExpression : equalityExpression eqop relationalExpressioneqop : EQEQ\n    | NEQandExpression : equalityExpressionandExpression : andExpression AND equalityExpressionorExpression : andExpressionorExpression : orExpression OR andExpressionconditionalExpression : orExpressionconditionalExpression : orExpression QUESTION expression COLON expressionexpression : conditionalExpressionexpressionlist : expressionexpressionlist : expressionlist COMMA expressionexpressionlist :statementlist : statementlist statementstatementlist :assignmentStatement : postfixExpression EQ expressionassignmentStatement : postfixExpression EQ errorassignmentStatement : error EQ expressionstatement : assignmentStatement SEMICOLON\n    | iterationStatement\n    | selectionStatement\n    | blockstatement : error SEMICOLONselectionStatement : IF LPAREN expression RPAREN statement ELSE statementselectionStatement : IF LPAREN expression RPAREN statementiterationStatement : FOR LPAREN assignmentStatement SEMICOLON expression SEMICOLON assignmentStatement RPAREN statementblock : LBRACE statementlist RBRACEblock : LBRACE error RBRACEtype : INT\n    | FLOAT\n    | BOOLtype : type TIMES'
    
_lr_action_items = {'EXCLAMATION':([38,49,52,53,55,56,60,65,66,67,68,76,77,78,80,81,82,83,84,85,86,87,88,89,90,101,102,117,118,119,120,],[60,60,60,-24,-23,-26,-25,60,60,60,60,-43,60,-44,60,60,60,-33,-34,-40,-39,-38,60,-37,60,60,60,60,-29,60,-30,]),'EQEQ':([29,30,31,35,42,51,57,59,61,63,79,91,100,103,106,107,108,109,111,127,],[-16,-13,-14,-17,-15,76,-35,-31,-41,-22,-21,-18,-20,-42,-32,-27,-36,76,-19,-28,]),'NUMBER':([20,25,32,33,36,38,39,44,45,48,49,50,52,53,55,56,60,65,66,67,68,69,76,77,78,80,81,82,83,84,85,86,87,88,89,90,101,102,110,117,118,119,120,121,125,128,132,135,138,],[-56,30,-62,-55,-68,30,-61,-63,-69,-60,30,30,30,-24,-23,-26,-25,30,30,30,30,-64,-43,30,-44,30,30,30,-33,-34,-40,-39,-38,30,-37,30,30,30,30,30,-29,30,-30,-66,30,30,-65,30,-67,]),'LBRACKET':([29,30,31,35,41,42,63,91,100,111,],[-16,-13,-14,-17,67,-15,67,-18,-20,-19,]),'GT':([29,30,31,35,42,57,59,61,63,79,91,100,103,106,107,108,111,127,],[-16,-13,-14,-17,-15,-35,-31,86,-22,-21,-18,-20,86,-32,-27,-36,-19,-28,]),'DIV':([29,30,31,35,42,63,79,91,100,106,107,111,127,],[-16,-13,-14,-17,-15,-22,-21,-18,-20,120,-27,-19,-28,]),'TRUE':([20,25,32,33,36,38,39,44,45,48,49,50,52,53,55,56,60,65,66,67,68,69,76,77,78,80,81,82,83,84,85,86,87,88,89,90,101,102,110,117,118,119,120,121,125,128,132,135,138,],[-56,31,-62,-55,-68,31,-61,-63,-69,-60,31,31,31,-24,-23,-26,-25,31,31,31,31,-64,-43,31,-44,31,31,31,-33,-34,-40,-39,-38,31,-37,31,31,31,31,31,-29,31,-30,-66,31,31,-65,31,-67,]),'MINUS':([29,30,31,35,38,42,49,52,53,55,56,57,59,60,63,65,66,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,106,107,108,111,117,118,119,120,127,],[-16,-13,-14,-17,53,-15,53,53,-24,-23,-26,84,-31,-25,-22,53,53,53,53,-43,53,-44,-21,53,53,53,-33,-34,-40,-39,-38,53,-37,53,-18,-20,53,53,-32,-27,84,-19,53,-29,53,-30,-28,]),'LOCALS':([112,114,],[122,124,]),'NEQ':([29,30,31,35,42,51,57,59,61,63,79,91,100,103,106,107,108,109,111,127,],[-16,-13,-14,-17,-15,78,-35,-31,-41,-22,-21,-18,-20,-42,-32,-27,-36,78,-19,-28,]),'GEQ':([29,30,31,35,42,57,59,61,63,79,91,100,103,106,107,108,111,127,],[-16,-13,-14,-17,-15,-35,-31,85,-22,-21,-18,-20,85,-32,-27,-36,-19,-28,]),'RPAREN':([5,10,15,16,19,22,23,24,29,30,31,35,42,49,51,54,57,58,59,61,62,63,64,70,71,72,73,79,91,92,93,94,96,97,98,99,100,103,105,106,107,108,109,111,113,115,123,126,127,129,130,131,133,134,],[14,-7,-8,-9,-8,27,-6,28,-16,-13,-14,-17,-15,-54,-45,-49,-35,-51,-31,-41,-47,-22,91,-12,-12,100,-52,-21,-18,110,-58,-57,-59,112,-10,114,-20,-42,-48,-32,-27,-36,-46,-19,-12,-53,-11,-50,-28,-8,-8,135,136,137,]),'SEMICOLON':([29,30,31,34,35,42,43,51,54,57,58,59,61,62,63,75,79,91,93,94,96,100,103,105,106,107,108,109,111,116,126,127,],[-16,-13,-14,48,-17,-15,69,-45,-49,-35,-51,-31,-41,-47,-22,102,-21,-18,-58,-57,-59,-20,-42,-48,-32,-27,-36,-46,-19,125,-50,-28,]),'QUESTION':([29,30,31,35,42,51,54,57,59,61,62,63,79,91,100,103,105,106,107,108,109,111,127,],[-16,-13,-14,-17,-15,-45,80,-35,-31,-41,-47,-22,-21,-18,-20,-42,-48,-32,-27,-36,-46,-19,-28,]),'PLUS':([29,30,31,35,38,42,49,52,53,55,56,57,59,60,63,65,66,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,101,102,106,107,108,111,117,118,119,120,127,],[-16,-13,-14,-17,55,-15,55,55,-24,-23,-26,83,-31,-25,-22,55,55,55,55,-43,55,-44,-21,55,55,55,-33,-34,-40,-39,-38,55,-37,55,-18,-20,55,55,-32,-27,83,-19,55,-29,55,-30,-28,]),'LT':([29,30,31,35,42,57,59,61,63,79,91,100,103,106,107,108,111,127,],[-16,-13,-14,-17,-15,-35,-31,89,-22,-21,-18,-20,89,-32,-27,-36,-19,-28,]),'COMMA':([4,10,12,15,16,19,22,23,24,29,30,31,35,42,49,51,54,57,58,59,61,62,63,72,73,79,91,98,100,103,105,106,107,108,109,111,115,126,127,129,130,133,134,],[-8,-7,18,-8,-9,-8,18,-6,18,-16,-13,-14,-17,-15,-54,-45,-49,-35,-51,-31,-41,-47,-22,101,-52,-21,-18,113,-20,-42,-48,-32,-27,-36,-46,-19,-53,-50,-28,-8,-8,18,18,]),'TILDE':([38,49,52,53,55,56,60,65,66,67,68,76,77,78,80,81,82,83,84,85,86,87,88,89,90,101,102,117,118,119,120,],[56,56,56,-24,-23,-26,-25,56,56,56,56,-43,56,-44,56,56,56,-33,-34,-40,-39,-38,56,-37,56,56,56,56,-29,56,-30,]),'COLON':([29,30,31,35,42,51,54,57,58,59,61,62,63,79,91,100,103,104,105,106,107,108,109,111,126,127,],[-16,-13,-14,-17,-15,-45,-49,-35,-51,-31,-41,-47,-22,-21,-18,-20,-42,117,-48,-32,-27,-36,-46,-19,-50,-28,]),'SEPARE':([4,10,12,16,23,],[-8,-7,19,-9,-6,]),'$end':([3,6,36,45,139,],[0,-1,-68,-69,-5,]),'IDENT':([8,9,11,13,17,20,25,32,33,36,38,39,44,45,48,49,50,52,53,55,56,60,65,66,67,68,69,70,71,76,77,78,80,81,82,83,84,85,86,87,88,89,90,101,102,110,113,117,118,119,120,121,125,128,132,135,138,],[-70,16,-71,-72,-73,-56,35,-62,-55,-68,35,-61,-63,-69,-60,35,35,35,-24,-23,-26,-25,35,35,35,35,-64,98,98,-43,35,-44,35,35,35,-33,-34,-40,-39,-38,35,-37,35,35,35,35,98,35,-29,35,-30,-66,35,35,-65,35,-67,]),'RBRACE':([20,25,26,32,33,36,39,44,45,48,69,121,132,138,],[-56,36,45,-62,-55,-68,-61,-63,-69,-60,-64,-66,-65,-67,]),'FOR':([20,25,32,33,36,39,44,45,48,69,110,121,128,132,135,138,],[-56,37,-62,-55,-68,-61,-63,-69,-60,-64,37,-66,37,-65,37,-67,]),'TIMES':([8,9,11,13,17,29,30,31,35,42,63,79,91,100,106,107,111,127,],[-70,17,-71,-72,-73,-16,-13,-14,-17,-15,-22,-21,-18,-20,118,-27,-19,-28,]),'RETURNS':([27,28,],[46,47,]),'LPAREN':([1,7,20,25,32,33,35,36,37,38,39,40,44,45,46,47,48,49,50,52,53,55,56,60,65,66,67,68,69,76,77,78,80,81,82,83,84,85,86,87,88,89,90,101,102,110,117,118,119,120,121,122,124,125,128,132,135,138,],[4,15,-56,38,-62,-55,49,-68,50,38,-61,65,-63,-69,70,71,-60,38,38,38,-24,-23,-26,-25,38,38,38,38,-64,-43,38,-44,38,38,38,-33,-34,-40,-39,-38,38,-37,38,38,38,38,38,-29,38,-30,-66,129,130,38,38,-65,38,-67,]),'FALSE':([20,25,32,33,36,38,39,44,45,48,49,50,52,53,55,56,60,65,66,67,68,69,76,77,78,80,81,82,83,84,85,86,87,88,89,90,101,102,110,117,118,119,120,121,125,128,132,135,138,],[-56,42,-62,-55,-68,42,-61,-63,-69,-60,42,42,42,-24,-23,-26,-25,42,42,42,42,-64,-43,42,-44,42,42,42,-33,-34,-40,-39,-38,42,-37,42,42,42,42,42,-29,42,-30,-66,42,42,-65,42,-67,]),'ELSE':([32,36,39,44,45,48,69,121,132,138,],[-62,-68,-61,-63,-69,-60,-64,128,-65,-67,]),'EQ':([29,30,31,35,41,42,43,74,91,100,111,],[-16,-13,-14,-17,66,-15,68,68,-18,-20,-19,]),'IF':([20,25,32,33,36,39,44,45,48,69,110,121,128,132,135,138,],[-56,40,-62,-55,-68,-61,-63,-69,-60,-64,40,-66,40,-65,40,-67,]),'AND':([29,30,31,35,42,51,57,59,61,62,63,79,91,100,103,105,106,107,108,109,111,127,],[-16,-13,-14,-17,-15,-45,-35,-31,-41,90,-22,-21,-18,-20,-42,90,-32,-27,-36,-46,-19,-28,]),'LBRACE':([14,20,25,32,33,36,39,44,45,48,69,110,121,128,132,135,136,137,138,],[20,-56,20,-62,-55,-68,-61,-63,-69,-60,-64,20,-66,20,-65,20,20,20,-67,]),'JOIN':([0,],[1,]),'INT':([4,15,18,19,129,130,],[8,8,8,8,8,8,]),'FLOAT':([4,15,18,19,129,130,],[11,11,11,11,11,11,]),'LEQ':([29,30,31,35,42,57,59,61,63,79,91,100,103,106,107,108,111,127,],[-16,-13,-14,-17,-15,-35,-31,87,-22,-21,-18,-20,87,-32,-27,-36,-19,-28,]),'SEQUENTIAL':([2,21,36,45,140,141,],[7,-3,-68,-69,-2,-4,]),'BOOL':([4,15,18,19,129,130,],[13,13,13,13,13,13,]),'error':([1,20,25,32,33,36,39,44,45,48,50,66,69,110,121,125,128,132,135,137,138,],[5,26,43,-62,-55,-68,-61,-63,-69,-60,74,93,-64,43,-66,74,43,-65,43,141,-67,]),'RBRACKET':([29,30,31,35,42,51,54,57,58,59,61,62,63,79,91,95,100,103,105,106,107,108,109,111,126,127,],[-16,-13,-14,-17,-15,-45,-49,-35,-51,-31,-41,-47,-22,-21,-18,111,-20,-42,-48,-32,-27,-36,-46,-19,-50,-28,]),'OR':([29,30,31,35,42,51,54,57,59,61,62,63,79,91,100,103,105,106,107,108,109,111,127,],[-16,-13,-14,-17,-15,-45,81,-35,-31,-41,-47,-22,-21,-18,-20,-42,-48,-32,-27,-36,-46,-19,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'equalityExpression':([38,49,65,66,67,68,80,81,90,101,102,117,],[51,51,51,51,51,51,51,51,109,51,51,51,]),'unop':([38,49,52,65,66,67,68,77,80,81,82,88,90,101,102,117,119,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'constant':([25,38,49,50,52,65,66,67,68,77,80,81,82,88,90,101,102,110,117,119,125,128,135,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'multiplicativeExpression':([82,],[106,]),'statementlist':([20,],[25,]),'joinspec':([0,],[2,]),'identlist':([70,71,113,],[97,99,123,]),'expressionlist':([49,],[72,]),'multop':([106,],[119,]),'arg':([4,15,18,19,129,130,],[10,10,23,10,10,10,]),'arglist':([4,15,19,129,130,],[12,22,24,133,134,]),'selectionStatement':([25,110,128,135,],[32,32,32,32,]),'eqop':([51,109,],[77,77,]),'orExpression':([38,49,65,66,67,68,80,101,102,117,],[54,54,54,54,54,54,54,54,54,54,]),'compop':([61,103,],[88,88,]),'program':([0,],[3,]),'statement':([25,110,128,135,],[33,121,132,138,]),'type':([4,15,18,19,129,130,],[9,9,9,9,9,9,]),'assignmentStatement':([25,50,110,125,128,135,],[34,75,34,131,34,34,]),'additiveExpression':([38,49,65,66,67,68,77,80,81,88,90,101,102,117,],[57,57,57,57,57,57,57,57,57,108,57,57,57,57,]),'addop':([57,108,],[82,82,]),'conditionalExpression':([38,49,65,66,67,68,80,101,102,117,],[58,58,58,58,58,58,58,58,58,58,]),'unaryExpression':([38,49,52,65,66,67,68,77,80,81,82,88,90,101,102,117,119,],[59,59,79,59,59,59,59,59,59,59,107,59,59,59,59,59,127,]),'sequentialspec':([2,],[6,]),'relationalExpression':([38,49,65,66,67,68,77,80,81,90,101,102,117,],[61,61,61,61,61,61,103,61,61,61,61,61,61,]),'iterationStatement':([25,110,128,135,],[39,39,39,39,]),'postfixExpression':([25,38,49,50,52,65,66,67,68,77,80,81,82,88,90,101,102,110,117,119,125,128,135,],[41,63,63,41,63,63,63,63,63,63,63,63,63,63,63,63,63,41,63,63,41,41,41,]),'andExpression':([38,49,65,66,67,68,80,81,101,102,117,],[62,62,62,62,62,62,62,105,62,62,62,]),'expression':([38,49,65,66,67,68,80,101,102,117,],[64,73,92,94,95,96,104,115,116,126,]),'block':([14,25,110,128,135,136,137,],[21,44,44,44,44,139,140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> joinspec sequentialspec','program',2,'p_program','homdefyacc.py',6),
  ('joinspec -> JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN block','joinspec',15,'p_joinspec','homdefyacc.py',11),
  ('joinspec -> JOIN error RPAREN block','joinspec',4,'p_joinspec_decl_error','homdefyacc.py',16),
  ('joinspec -> JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN error','joinspec',15,'p_joinspec_body_error','homdefyacc.py',20),
  ('sequentialspec -> SEQUENTIAL LPAREN arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN block','sequentialspec',13,'p_sequentialspec','homdefyacc.py',24),
  ('arglist -> arglist COMMA arg','arglist',3,'p_arglist_mutliple','homdefyacc.py',30),
  ('arglist -> arg','arglist',1,'p_arglist_singleton','homdefyacc.py',34),
  ('arglist -> <empty>','arglist',0,'p_arglist_empy','homdefyacc.py',39),
  ('arg -> type IDENT','arg',2,'p_arg','homdefyacc.py',44),
  ('identlist -> IDENT','identlist',1,'p_identlist_singleton','homdefyacc.py',50),
  ('identlist -> IDENT COMMA identlist','identlist',3,'p_identlist_mutliple','homdefyacc.py',55),
  ('identlist -> <empty>','identlist',0,'p_identlist_empty','homdefyacc.py',60),
  ('constant -> NUMBER','constant',1,'p_constant','homdefyacc.py',69),
  ('constant -> TRUE','constant',1,'p_constant','homdefyacc.py',70),
  ('constant -> FALSE','constant',1,'p_constant','homdefyacc.py',71),
  ('postfixExpression -> constant','postfixExpression',1,'p_postfixExpr','homdefyacc.py',75),
  ('postfixExpression -> IDENT','postfixExpression',1,'p_postfixExpr','homdefyacc.py',76),
  ('postfixExpression -> LPAREN expression RPAREN','postfixExpression',3,'p_postfixExpr','homdefyacc.py',77),
  ('postfixExpression -> postfixExpression LBRACKET expression RBRACKET','postfixExpression',4,'p_postfixExpr_array_access','homdefyacc.py',82),
  ('postfixExpression -> IDENT LPAREN expressionlist RPAREN','postfixExpression',4,'p_postfixExpr_funccall','homdefyacc.py',87),
  ('unaryExpression -> unop unaryExpression','unaryExpression',2,'p_unary_expression','homdefyacc.py',92),
  ('unaryExpression -> postfixExpression','unaryExpression',1,'p_unary_expression_id','homdefyacc.py',97),
  ('unop -> PLUS','unop',1,'p_unop','homdefyacc.py',102),
  ('unop -> MINUS','unop',1,'p_unop','homdefyacc.py',103),
  ('unop -> EXCLAMATION','unop',1,'p_unop','homdefyacc.py',104),
  ('unop -> TILDE','unop',1,'p_unop','homdefyacc.py',105),
  ('multiplicativeExpression -> unaryExpression','multiplicativeExpression',1,'p_multiplicativeExpr_id','homdefyacc.py',110),
  ('multiplicativeExpression -> multiplicativeExpression multop unaryExpression','multiplicativeExpression',3,'p_multiplicativeExpr','homdefyacc.py',115),
  ('multop -> TIMES','multop',1,'p_multop','homdefyacc.py',120),
  ('multop -> DIV','multop',1,'p_multop','homdefyacc.py',121),
  ('additiveExpression -> unaryExpression','additiveExpression',1,'p_additiveExpr_id','homdefyacc.py',126),
  ('additiveExpression -> additiveExpression addop multiplicativeExpression','additiveExpression',3,'p_additiveExpr','homdefyacc.py',131),
  ('addop -> PLUS','addop',1,'p_addop','homdefyacc.py',136),
  ('addop -> MINUS','addop',1,'p_addop','homdefyacc.py',137),
  ('relationalExpression -> additiveExpression','relationalExpression',1,'p_relationalExpression_id','homdefyacc.py',142),
  ('relationalExpression -> relationalExpression compop additiveExpression','relationalExpression',3,'p_relationalExpression','homdefyacc.py',147),
  ('compop -> LT','compop',1,'p_compop','homdefyacc.py',152),
  ('compop -> LEQ','compop',1,'p_compop','homdefyacc.py',153),
  ('compop -> GT','compop',1,'p_compop','homdefyacc.py',154),
  ('compop -> GEQ','compop',1,'p_compop','homdefyacc.py',155),
  ('equalityExpression -> relationalExpression','equalityExpression',1,'p_equalityExpression_id','homdefyacc.py',160),
  ('equalityExpression -> equalityExpression eqop relationalExpression','equalityExpression',3,'p_equalityExpression','homdefyacc.py',165),
  ('eqop -> EQEQ','eqop',1,'p_eqop','homdefyacc.py',170),
  ('eqop -> NEQ','eqop',1,'p_eqop','homdefyacc.py',171),
  ('andExpression -> equalityExpression','andExpression',1,'p_andExpression_id','homdefyacc.py',176),
  ('andExpression -> andExpression AND equalityExpression','andExpression',3,'p_andExpression','homdefyacc.py',181),
  ('orExpression -> andExpression','orExpression',1,'p_orExpression_id','homdefyacc.py',186),
  ('orExpression -> orExpression OR andExpression','orExpression',3,'p_orExpression','homdefyacc.py',191),
  ('conditionalExpression -> orExpression','conditionalExpression',1,'p_conditionalExpression_id','homdefyacc.py',196),
  ('conditionalExpression -> orExpression QUESTION expression COLON expression','conditionalExpression',5,'p_conditionalExpression','homdefyacc.py',201),
  ('expression -> conditionalExpression','expression',1,'p_expression','homdefyacc.py',206),
  ('expressionlist -> expression','expressionlist',1,'p_expressionlist_singleton','homdefyacc.py',210),
  ('expressionlist -> expressionlist COMMA expression','expressionlist',3,'p_expressionlist_list','homdefyacc.py',215),
  ('expressionlist -> <empty>','expressionlist',0,'p_expressionlist_empty','homdefyacc.py',220),
  ('statementlist -> statementlist statement','statementlist',2,'p_statementlist','homdefyacc.py',226),
  ('statementlist -> <empty>','statementlist',0,'p_statementlist_empty','homdefyacc.py',234),
  ('assignmentStatement -> postfixExpression EQ expression','assignmentStatement',3,'p_assignment','homdefyacc.py',239),
  ('assignmentStatement -> postfixExpression EQ error','assignmentStatement',3,'p_assignment_rh_error','homdefyacc.py',244),
  ('assignmentStatement -> error EQ expression','assignmentStatement',3,'p_assignment_lh_error','homdefyacc.py',249),
  ('statement -> assignmentStatement SEMICOLON','statement',2,'p_statement','homdefyacc.py',254),
  ('statement -> iterationStatement','statement',1,'p_statement','homdefyacc.py',255),
  ('statement -> selectionStatement','statement',1,'p_statement','homdefyacc.py',256),
  ('statement -> block','statement',1,'p_statement','homdefyacc.py',257),
  ('statement -> error SEMICOLON','statement',2,'p_assignStmt_error','homdefyacc.py',261),
  ('selectionStatement -> IF LPAREN expression RPAREN statement ELSE statement','selectionStatement',7,'p_conditional2','homdefyacc.py',266),
  ('selectionStatement -> IF LPAREN expression RPAREN statement','selectionStatement',5,'p_conditional','homdefyacc.py',271),
  ('iterationStatement -> FOR LPAREN assignmentStatement SEMICOLON expression SEMICOLON assignmentStatement RPAREN statement','iterationStatement',9,'p_iteration','homdefyacc.py',276),
  ('block -> LBRACE statementlist RBRACE','block',3,'p_block','homdefyacc.py',281),
  ('block -> LBRACE error RBRACE','block',3,'p_block_error','homdefyacc.py',285),
  ('type -> INT','type',1,'p_type_base','homdefyacc.py',291),
  ('type -> FLOAT','type',1,'p_type_base','homdefyacc.py',292),
  ('type -> BOOL','type',1,'p_type_base','homdefyacc.py',293),
  ('type -> type TIMES','type',2,'p_type_ptr','homdefyacc.py',297),
]
