
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEAND COLON COMMA DIV EQ EQEQ EXCLAMATION GEQ GT IDENT LBRACE LBRACKET LEQ LPAREN LT MINUS NEQ NUMBER OR PLUS QUESTION RBRACE RBRACKET RPAREN SEMICOLON TILDE SEPARE TIMES INT FLOAT ELSE FALSE LOCALS IF JOIN FOR RETURNS SEQUENTIAL BOOL TRUEprogram : joinspec sequentialspecjoinspec : JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN statementjoinspec : JOIN error RPAREN blockjoinspec : JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN errorsequentialspec : SEQUENTIAL LPAREN arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN statement arglist : arglist COMMA argarglist : argarglist :arg : type IDENTarg : erroridentlist : identifieridentlist : identifier COMMA identlistidentlist :constant : NUMBER\n    | TRUE\n    | FALSEpostfixExpression : constant\n    | identifier\n    | LPAREN expression RPARENidentifier : IDENTpostfixExpression : postfixExpression LBRACKET expression RBRACKETpostfixExpression : IDENT LPAREN expressionlist RPARENunaryExpression : unop unaryExpressionunaryExpression : postfixExpressionunop : PLUS\n    | MINUS\n    | EXCLAMATION\n    | TILDEmultiplicativeExpression : unaryExpressionmultiplicativeExpression : multiplicativeExpression multop unaryExpressionmultop : TIMES\n    | DIVadditiveExpression : multiplicativeExpressionadditiveExpression : additiveExpression addop multiplicativeExpressionaddop : PLUS\n    | MINUSrelationalExpression : additiveExpressionrelationalExpression : relationalExpression compop additiveExpressioncompop : LT\n    | LEQ\n    | GT\n    | GEQequalityExpression : relationalExpressionequalityExpression : equalityExpression eqop relationalExpressioneqop : EQEQ\n    | NEQandExpression : equalityExpressionandExpression : andExpression AND equalityExpressionorExpression : andExpressionorExpression : orExpression OR andExpressionconditionalExpression : orExpressionconditionalExpression : orExpression QUESTION expression COLON expressionexpression : conditionalExpressionexpressionlist : expressionexpressionlist : expressionlist COMMA expressionexpressionlist :statementlist : statementlist statementstatementlist :assignmentStatement : postfixExpression EQ expressionassignmentStatement : IDENT PLUS PLUSassignmentStatement : IDENT MINUS MINUSassignmentStatement : postfixExpression EQ errorassignmentStatement : error EQ expressionstatement : assignmentStatement SEMICOLON\n    | iterationStatement\n    | selectionStatement\n    | blockstatement : error SEMICOLONselectionStatement : IF LPAREN expression RPAREN statement ELSE statementselectionStatement : IF LPAREN expression RPAREN statement %prec IFXiterationStatement : FOR LPAREN assignmentStatement SEMICOLON expression SEMICOLON assignmentStatement RPAREN statementblock : LBRACE statementlist RBRACEtype : INT\n    | FLOAT\n    | BOOLtype : type TIMES'
    
_lr_action_items = {'EXCLAMATION':([38,49,54,57,59,60,64,69,70,71,72,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,112,127,],[64,64,64,-26,-25,-28,-27,64,64,64,64,-45,64,-46,-32,64,-31,64,64,64,-35,-36,-42,-41,-40,64,-39,64,64,64,64,]),'EQEQ':([29,30,31,42,44,53,55,56,61,63,65,67,85,100,110,113,114,117,118,119,121,],[-17,-14,-15,-16,-18,82,-33,-20,-37,-29,-43,-24,-23,-19,-22,-44,-30,-34,-38,82,-21,]),'NUMBER':([21,26,32,33,36,38,39,45,48,49,52,54,57,59,60,64,69,70,71,72,73,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,112,120,127,128,132,134,138,141,142,143,144,],[-58,30,-66,-57,-72,30,-65,-67,-64,30,30,30,-26,-25,-28,-27,30,30,30,30,-68,-45,30,-46,-32,30,-31,30,30,30,-35,-36,-42,-41,-40,30,-39,30,30,30,30,30,-70,30,30,-69,30,30,30,-71,]),'LBRACKET':([29,30,31,35,41,42,44,56,67,100,110,121,],[-17,-14,-15,-20,71,-16,-18,-20,71,-19,-22,-21,]),'GT':([29,30,31,42,44,55,56,61,63,65,67,85,100,110,113,114,117,118,121,],[-17,-14,-15,-16,-18,-33,-20,-37,-29,95,-24,-23,-19,-22,95,-30,-34,-38,-21,]),'DIV':([29,30,31,42,44,55,56,63,67,85,100,110,114,117,121,],[-17,-14,-15,-16,-18,86,-20,-29,-24,-23,-19,-22,-30,86,-21,]),'TRUE':([21,26,32,33,36,38,39,45,48,49,52,54,57,59,60,64,69,70,71,72,73,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,112,120,127,128,132,134,138,141,142,143,144,],[-58,31,-66,-57,-72,31,-65,-67,-64,31,31,31,-26,-25,-28,-27,31,31,31,31,-68,-45,31,-46,-32,31,-31,31,31,31,-35,-36,-42,-41,-40,31,-39,31,31,31,31,31,-70,31,31,-69,31,31,31,-71,]),'MINUS':([29,30,31,35,38,42,44,49,51,54,55,56,57,59,60,61,63,64,67,69,70,71,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,110,111,112,114,117,118,121,127,],[-17,-14,-15,51,57,-16,-18,57,79,57,-33,-20,-26,-25,-28,93,-29,-27,-24,57,57,57,57,-45,57,-46,-23,-32,57,-31,57,57,57,-35,-36,-42,-41,-40,57,-39,57,-19,-22,57,57,-30,-34,93,-21,57,]),'LOCALS':([122,124,],[129,131,]),'NEQ':([29,30,31,42,44,53,55,56,61,63,65,67,85,100,110,113,114,117,118,119,121,],[-17,-14,-15,-16,-18,84,-33,-20,-37,-29,-43,-24,-23,-19,-22,-44,-30,-34,-38,84,-21,]),'GEQ':([29,30,31,42,44,55,56,61,63,65,67,85,100,110,113,114,117,118,121,],[-17,-14,-15,-16,-18,-33,-20,-37,-29,94,-24,-23,-19,-22,94,-30,-34,-38,-21,]),'RPAREN':([5,10,13,16,17,20,23,24,25,29,30,31,42,44,49,53,55,56,58,61,62,63,65,66,67,68,74,75,76,77,78,79,85,100,101,102,103,105,106,107,108,109,110,113,114,116,117,118,119,121,123,125,130,133,135,136,137,139,140,],[15,-7,-10,-8,-9,-8,27,-6,28,-17,-14,-15,-16,-18,-56,-47,-33,-20,-51,-37,-53,-29,-43,-49,-24,100,-13,-13,110,-54,-60,-61,-23,-19,120,-62,-59,-63,122,-11,-20,124,-22,-44,-30,-50,-34,-38,-48,-21,-13,-55,-12,-52,-8,-8,141,142,143,]),'SEMICOLON':([29,30,31,34,42,43,44,53,55,56,58,61,62,63,65,66,67,78,79,81,85,100,102,103,105,110,113,114,116,117,118,119,121,126,133,147,],[-17,-14,-15,48,-16,73,-18,-47,-33,-20,-51,-37,-53,-29,-43,-49,-24,-60,-61,112,-23,-19,-62,-59,-63,-22,-44,-30,-50,-34,-38,-48,-21,132,-52,73,]),'QUESTION':([29,30,31,42,44,53,55,56,58,61,63,65,66,67,85,100,110,113,114,116,117,118,119,121,],[-17,-14,-15,-16,-18,-47,-33,-20,89,-37,-29,-43,-49,-24,-23,-19,-22,-44,-30,-50,-34,-38,-48,-21,]),'PLUS':([29,30,31,35,38,42,44,49,50,54,55,56,57,59,60,61,63,64,67,69,70,71,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,110,111,112,114,117,118,121,127,],[-17,-14,-15,50,59,-16,-18,59,78,59,-33,-20,-26,-25,-28,92,-29,-27,-24,59,59,59,59,-45,59,-46,-23,-32,59,-31,59,59,59,-35,-36,-42,-41,-40,59,-39,59,-19,-22,59,59,-30,-34,92,-21,59,]),'LT':([29,30,31,42,44,55,56,61,63,65,67,85,100,110,113,114,117,118,121,],[-17,-14,-15,-16,-18,-33,-20,-37,-29,98,-24,-23,-19,-22,98,-30,-34,-38,-21,]),'COMMA':([4,10,13,14,16,17,20,23,24,25,29,30,31,42,44,49,53,55,56,58,61,62,63,65,66,67,76,77,85,100,107,108,110,113,114,116,117,118,119,121,125,133,135,136,139,140,],[-8,-7,-10,19,-8,-9,-8,19,-6,19,-17,-14,-15,-16,-18,-56,-47,-33,-20,-51,-37,-53,-29,-43,-49,-24,111,-54,-23,-19,123,-20,-22,-44,-30,-50,-34,-38,-48,-21,-55,-52,-8,-8,19,19,]),'TILDE':([38,49,54,57,59,60,64,69,70,71,72,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,112,127,],[60,60,60,-26,-25,-28,-27,60,60,60,60,-45,60,-46,-32,60,-31,60,60,60,-35,-36,-42,-41,-40,60,-39,60,60,60,60,]),'COLON':([29,30,31,42,44,53,55,56,58,61,62,63,65,66,67,85,100,110,113,114,115,116,117,118,119,121,133,],[-17,-14,-15,-16,-18,-47,-33,-20,-51,-37,-53,-29,-43,-49,-24,-23,-19,-22,-44,-30,127,-50,-34,-38,-48,-21,-52,]),'SEPARE':([4,10,13,14,17,24,],[-8,-7,-10,20,-9,-6,]),'$end':([3,6,32,36,39,45,48,73,128,138,144,145,],[0,-1,-66,-72,-65,-67,-64,-68,-70,-69,-71,-5,]),'IDENT':([8,9,11,12,18,21,26,32,33,36,38,39,45,48,49,52,54,57,59,60,64,69,70,71,72,73,74,75,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,112,120,123,127,128,132,134,138,141,142,143,144,],[-73,17,-74,-75,-76,-58,35,-66,-57,-72,56,-65,-67,-64,56,35,56,-26,-25,-28,-27,56,56,56,56,-68,108,108,-45,56,-46,-32,56,-31,56,56,56,-35,-36,-42,-41,-40,56,-39,56,56,56,35,108,56,-70,35,35,-69,35,35,35,-71,]),'RBRACE':([21,26,32,33,36,39,45,48,73,128,138,144,],[-58,36,-66,-57,-72,-65,-67,-64,-68,-70,-69,-71,]),'FOR':([21,26,32,33,36,39,45,48,73,120,128,134,138,141,142,143,144,],[-58,37,-66,-57,-72,-65,-67,-64,-68,37,-70,37,-69,37,37,37,-71,]),'TIMES':([8,9,11,12,18,29,30,31,42,44,55,56,63,67,85,100,110,114,117,121,],[-73,18,-74,-75,-76,-17,-14,-15,-16,-18,88,-20,-29,-24,-23,-19,-22,-30,88,-21,]),'RETURNS':([27,28,],[46,47,]),'LPAREN':([1,7,21,26,32,33,35,36,37,38,39,40,45,46,47,48,49,52,54,56,57,59,60,64,69,70,71,72,73,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,112,120,127,128,129,131,132,134,138,141,142,143,144,],[4,16,-58,38,-66,-57,49,-72,52,38,-65,69,-67,74,75,-64,38,38,38,49,-26,-25,-28,-27,38,38,38,38,-68,-45,38,-46,-32,38,-31,38,38,38,-35,-36,-42,-41,-40,38,-39,38,38,38,38,38,-70,135,136,38,38,-69,38,38,38,-71,]),'FALSE':([21,26,32,33,36,38,39,45,48,49,52,54,57,59,60,64,69,70,71,72,73,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,112,120,127,128,132,134,138,141,142,143,144,],[-58,42,-66,-57,-72,42,-65,-67,-64,42,42,42,-26,-25,-28,-27,42,42,42,42,-68,-45,42,-46,-32,42,-31,42,42,42,-35,-36,-42,-41,-40,42,-39,42,42,42,42,42,-70,42,42,-69,42,42,42,-71,]),'ELSE':([32,36,39,45,48,73,128,138,144,],[-66,-72,-65,-67,-64,-68,134,-69,-71,]),'EQ':([29,30,31,35,41,42,43,44,80,100,110,121,147,],[-17,-14,-15,-20,70,-16,72,-18,72,-19,-22,-21,72,]),'IF':([21,26,32,33,36,39,45,48,73,120,128,134,138,141,142,143,144,],[-58,40,-66,-57,-72,-65,-67,-64,-68,40,-70,40,-69,40,40,40,-71,]),'AND':([29,30,31,42,44,53,55,56,61,63,65,66,67,85,100,110,113,114,116,117,118,119,121,],[-17,-14,-15,-16,-18,-47,-33,-20,-37,-29,-43,99,-24,-23,-19,-22,-44,-30,99,-34,-38,-48,-21,]),'LBRACE':([15,21,26,32,33,36,39,45,48,73,120,128,134,138,141,142,143,144,],[21,-58,21,-66,-57,-72,-65,-67,-64,-68,21,-70,21,-69,21,21,21,-71,]),'JOIN':([0,],[1,]),'INT':([4,16,19,20,135,136,],[8,8,8,8,8,8,]),'FLOAT':([4,16,19,20,135,136,],[11,11,11,11,11,11,]),'LEQ':([29,30,31,42,44,55,56,61,63,65,67,85,100,110,113,114,117,118,121,],[-17,-14,-15,-16,-18,-33,-20,-37,-29,96,-24,-23,-19,-22,96,-30,-34,-38,-21,]),'SEQUENTIAL':([2,22,32,36,39,45,48,73,128,138,144,146,147,],[7,-3,-66,-72,-65,-67,-64,-68,-70,-69,-71,-2,-4,]),'BOOL':([4,16,19,20,135,136,],[12,12,12,12,12,12,]),'error':([1,4,16,19,20,21,26,32,33,36,39,45,48,52,70,73,120,128,132,134,135,136,138,141,142,143,144,],[5,13,13,13,13,-58,43,-66,-57,-72,-65,-67,-64,80,102,-68,43,-70,80,43,13,13,-69,43,43,147,-71,]),'RBRACKET':([29,30,31,42,44,53,55,56,58,61,62,63,65,66,67,85,100,104,110,113,114,116,117,118,119,121,133,],[-17,-14,-15,-16,-18,-47,-33,-20,-51,-37,-53,-29,-43,-49,-24,-23,-19,121,-22,-44,-30,-50,-34,-38,-48,-21,-52,]),'OR':([29,30,31,42,44,53,55,56,58,61,63,65,66,67,85,100,110,113,114,116,117,118,119,121,],[-17,-14,-15,-16,-18,-47,-33,-20,90,-37,-29,-43,-49,-24,-23,-19,-22,-44,-30,-50,-34,-38,-48,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'equalityExpression':([38,49,69,70,71,72,89,90,99,111,112,127,],[53,53,53,53,53,53,53,53,119,53,53,53,]),'unop':([38,49,54,69,70,71,72,83,87,89,90,91,97,99,111,112,127,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'constant':([26,38,49,52,54,69,70,71,72,83,87,89,90,91,97,99,111,112,120,127,132,134,141,142,143,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'multiplicativeExpression':([38,49,69,70,71,72,83,89,90,91,97,99,111,112,127,],[55,55,55,55,55,55,55,55,55,117,55,55,55,55,55,]),'statementlist':([21,],[26,]),'joinspec':([0,],[2,]),'identlist':([74,75,123,],[106,109,130,]),'expressionlist':([49,],[76,]),'multop':([55,117,],[87,87,]),'arg':([4,16,19,20,135,136,],[10,10,24,10,10,10,]),'arglist':([4,16,20,135,136,],[14,23,25,139,140,]),'selectionStatement':([26,120,134,141,142,143,],[32,32,32,32,32,32,]),'eqop':([53,119,],[83,83,]),'orExpression':([38,49,69,70,71,72,89,111,112,127,],[58,58,58,58,58,58,58,58,58,58,]),'compop':([65,113,],[97,97,]),'program':([0,],[3,]),'statement':([26,120,134,141,142,143,],[33,128,138,144,145,146,]),'type':([4,16,19,20,135,136,],[9,9,9,9,9,9,]),'assignmentStatement':([26,52,120,132,134,141,142,143,],[34,81,34,137,34,34,34,34,]),'additiveExpression':([38,49,69,70,71,72,83,89,90,97,99,111,112,127,],[61,61,61,61,61,61,61,61,61,118,61,61,61,61,]),'addop':([61,118,],[91,91,]),'conditionalExpression':([38,49,69,70,71,72,89,111,112,127,],[62,62,62,62,62,62,62,62,62,62,]),'unaryExpression':([38,49,54,69,70,71,72,83,87,89,90,91,97,99,111,112,127,],[63,63,85,63,63,63,63,63,114,63,63,63,63,63,63,63,63,]),'sequentialspec':([2,],[6,]),'relationalExpression':([38,49,69,70,71,72,83,89,90,99,111,112,127,],[65,65,65,65,65,65,113,65,65,65,65,65,65,]),'iterationStatement':([26,120,134,141,142,143,],[39,39,39,39,39,39,]),'postfixExpression':([26,38,49,52,54,69,70,71,72,83,87,89,90,91,97,99,111,112,120,127,132,134,141,142,143,],[41,67,67,41,67,67,67,67,67,67,67,67,67,67,67,67,67,67,41,67,41,41,41,41,41,]),'andExpression':([38,49,69,70,71,72,89,90,111,112,127,],[66,66,66,66,66,66,66,116,66,66,66,]),'identifier':([26,38,49,52,54,69,70,71,72,74,75,83,87,89,90,91,97,99,111,112,120,123,127,132,134,141,142,143,],[44,44,44,44,44,44,44,44,44,107,107,44,44,44,44,44,44,44,44,44,44,107,44,44,44,44,44,44,]),'expression':([38,49,69,70,71,72,89,111,112,127,],[68,77,101,103,104,105,115,125,126,133,]),'block':([15,26,120,134,141,142,143,],[22,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> joinspec sequentialspec','program',2,'p_program','homdefyacc.py',12),
  ('joinspec -> JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN statement','joinspec',15,'p_joinspec','homdefyacc.py',17),
  ('joinspec -> JOIN error RPAREN block','joinspec',4,'p_joinspec_decl_error','homdefyacc.py',22),
  ('joinspec -> JOIN LPAREN arglist SEPARE arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN error','joinspec',15,'p_joinspec_body_error','homdefyacc.py',26),
  ('sequentialspec -> SEQUENTIAL LPAREN arglist RPAREN RETURNS LPAREN identlist RPAREN LOCALS LPAREN arglist RPAREN statement','sequentialspec',13,'p_sequentialspec','homdefyacc.py',30),
  ('arglist -> arglist COMMA arg','arglist',3,'p_arglist_mutliple','homdefyacc.py',36),
  ('arglist -> arg','arglist',1,'p_arglist_singleton','homdefyacc.py',43),
  ('arglist -> <empty>','arglist',0,'p_arglist_empy','homdefyacc.py',48),
  ('arg -> type IDENT','arg',2,'p_arg','homdefyacc.py',52),
  ('arg -> error','arg',1,'p_arglist_error','homdefyacc.py',56),
  ('identlist -> identifier','identlist',1,'p_identlist_singleton','homdefyacc.py',61),
  ('identlist -> identifier COMMA identlist','identlist',3,'p_identlist_mutliple','homdefyacc.py',66),
  ('identlist -> <empty>','identlist',0,'p_identlist_empty','homdefyacc.py',74),
  ('constant -> NUMBER','constant',1,'p_constant','homdefyacc.py',83),
  ('constant -> TRUE','constant',1,'p_constant','homdefyacc.py',84),
  ('constant -> FALSE','constant',1,'p_constant','homdefyacc.py',85),
  ('postfixExpression -> constant','postfixExpression',1,'p_postfixExpr','homdefyacc.py',89),
  ('postfixExpression -> identifier','postfixExpression',1,'p_postfixExpr','homdefyacc.py',90),
  ('postfixExpression -> LPAREN expression RPAREN','postfixExpression',3,'p_postfixExpr','homdefyacc.py',91),
  ('identifier -> IDENT','identifier',1,'p_identifer','homdefyacc.py',95),
  ('postfixExpression -> postfixExpression LBRACKET expression RBRACKET','postfixExpression',4,'p_postfixExpr_array_access','homdefyacc.py',99),
  ('postfixExpression -> IDENT LPAREN expressionlist RPAREN','postfixExpression',4,'p_postfixExpr_funccall','homdefyacc.py',104),
  ('unaryExpression -> unop unaryExpression','unaryExpression',2,'p_unary_expression','homdefyacc.py',109),
  ('unaryExpression -> postfixExpression','unaryExpression',1,'p_unary_expression_id','homdefyacc.py',114),
  ('unop -> PLUS','unop',1,'p_unop','homdefyacc.py',119),
  ('unop -> MINUS','unop',1,'p_unop','homdefyacc.py',120),
  ('unop -> EXCLAMATION','unop',1,'p_unop','homdefyacc.py',121),
  ('unop -> TILDE','unop',1,'p_unop','homdefyacc.py',122),
  ('multiplicativeExpression -> unaryExpression','multiplicativeExpression',1,'p_multiplicativeExpr_id','homdefyacc.py',127),
  ('multiplicativeExpression -> multiplicativeExpression multop unaryExpression','multiplicativeExpression',3,'p_multiplicativeExpr','homdefyacc.py',132),
  ('multop -> TIMES','multop',1,'p_multop','homdefyacc.py',137),
  ('multop -> DIV','multop',1,'p_multop','homdefyacc.py',138),
  ('additiveExpression -> multiplicativeExpression','additiveExpression',1,'p_additiveExpr_id','homdefyacc.py',143),
  ('additiveExpression -> additiveExpression addop multiplicativeExpression','additiveExpression',3,'p_additiveExpr','homdefyacc.py',148),
  ('addop -> PLUS','addop',1,'p_addop','homdefyacc.py',153),
  ('addop -> MINUS','addop',1,'p_addop','homdefyacc.py',154),
  ('relationalExpression -> additiveExpression','relationalExpression',1,'p_relationalExpression_id','homdefyacc.py',159),
  ('relationalExpression -> relationalExpression compop additiveExpression','relationalExpression',3,'p_relationalExpression','homdefyacc.py',164),
  ('compop -> LT','compop',1,'p_compop','homdefyacc.py',169),
  ('compop -> LEQ','compop',1,'p_compop','homdefyacc.py',170),
  ('compop -> GT','compop',1,'p_compop','homdefyacc.py',171),
  ('compop -> GEQ','compop',1,'p_compop','homdefyacc.py',172),
  ('equalityExpression -> relationalExpression','equalityExpression',1,'p_equalityExpression_id','homdefyacc.py',177),
  ('equalityExpression -> equalityExpression eqop relationalExpression','equalityExpression',3,'p_equalityExpression','homdefyacc.py',182),
  ('eqop -> EQEQ','eqop',1,'p_eqop','homdefyacc.py',187),
  ('eqop -> NEQ','eqop',1,'p_eqop','homdefyacc.py',188),
  ('andExpression -> equalityExpression','andExpression',1,'p_andExpression_id','homdefyacc.py',193),
  ('andExpression -> andExpression AND equalityExpression','andExpression',3,'p_andExpression','homdefyacc.py',198),
  ('orExpression -> andExpression','orExpression',1,'p_orExpression_id','homdefyacc.py',203),
  ('orExpression -> orExpression OR andExpression','orExpression',3,'p_orExpression','homdefyacc.py',208),
  ('conditionalExpression -> orExpression','conditionalExpression',1,'p_conditionalExpression_id','homdefyacc.py',213),
  ('conditionalExpression -> orExpression QUESTION expression COLON expression','conditionalExpression',5,'p_conditionalExpression','homdefyacc.py',218),
  ('expression -> conditionalExpression','expression',1,'p_expression','homdefyacc.py',223),
  ('expressionlist -> expression','expressionlist',1,'p_expressionlist_singleton','homdefyacc.py',227),
  ('expressionlist -> expressionlist COMMA expression','expressionlist',3,'p_expressionlist_list','homdefyacc.py',232),
  ('expressionlist -> <empty>','expressionlist',0,'p_expressionlist_empty','homdefyacc.py',237),
  ('statementlist -> statementlist statement','statementlist',2,'p_statementlist','homdefyacc.py',243),
  ('statementlist -> <empty>','statementlist',0,'p_statementlist_empty','homdefyacc.py',251),
  ('assignmentStatement -> postfixExpression EQ expression','assignmentStatement',3,'p_assignment','homdefyacc.py',256),
  ('assignmentStatement -> IDENT PLUS PLUS','assignmentStatement',3,'p_assignment_increment','homdefyacc.py',260),
  ('assignmentStatement -> IDENT MINUS MINUS','assignmentStatement',3,'p_assignment_decrement','homdefyacc.py',264),
  ('assignmentStatement -> postfixExpression EQ error','assignmentStatement',3,'p_assignment_rh_error','homdefyacc.py',268),
  ('assignmentStatement -> error EQ expression','assignmentStatement',3,'p_assignment_lh_error','homdefyacc.py',273),
  ('statement -> assignmentStatement SEMICOLON','statement',2,'p_statement','homdefyacc.py',278),
  ('statement -> iterationStatement','statement',1,'p_statement','homdefyacc.py',279),
  ('statement -> selectionStatement','statement',1,'p_statement','homdefyacc.py',280),
  ('statement -> block','statement',1,'p_statement','homdefyacc.py',281),
  ('statement -> error SEMICOLON','statement',2,'p_assignStmt_error','homdefyacc.py',285),
  ('selectionStatement -> IF LPAREN expression RPAREN statement ELSE statement','selectionStatement',7,'p_conditional2','homdefyacc.py',290),
  ('selectionStatement -> IF LPAREN expression RPAREN statement','selectionStatement',5,'p_conditional','homdefyacc.py',295),
  ('iterationStatement -> FOR LPAREN assignmentStatement SEMICOLON expression SEMICOLON assignmentStatement RPAREN statement','iterationStatement',9,'p_iteration','homdefyacc.py',300),
  ('block -> LBRACE statementlist RBRACE','block',3,'p_block','homdefyacc.py',305),
  ('type -> INT','type',1,'p_type_base','homdefyacc.py',313),
  ('type -> FLOAT','type',1,'p_type_base','homdefyacc.py',314),
  ('type -> BOOL','type',1,'p_type_base','homdefyacc.py',315),
  ('type -> type TIMES','type',2,'p_type_ptr','homdefyacc.py',319),
]
